#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Lo q hicimos Bertea y Basterra dice Venturi q unas todo
\end_layout

\begin_layout Author
Basterra y Bertea
\end_layout

\begin_layout Section
Linux en Android
\end_layout

\begin_layout Standard
Android está basado en Linux, disponiendo de un Kernel en este sistema y
 utilizando una máquina virtual sobre este kernel que es la responsable
 de convertir el código escrito en Java de las aplicaciones a código capaz
 de comprender el Kernel.
 Las aplicaciones para Android se escriben y desarrollan en Java aunque
 con unas APIS propias por lo que las aplicaciones escritas en Java para
 PC y demás plataformas ya existentes no son compatibles con este sistema.
\end_layout

\begin_layout Subsection
Java/Dalvik
\end_layout

\begin_layout Standard
La estructura del sistema operativo Android se compone de aplicaciones que
 se ejecutan en un framework Java de aplicaciones orientadas a objetos sobre
 el núcleo de las bibliotecas de Java en una máquina virtual Dalvik con
 compilación en tiempo de ejecución.
 Las bibliotecas escritas en lenguaje C incluyen un administrador de interfaz
 gráfica (surface manager), un framework OpenCore, una base de datos relacional
 SQLite, una Interfaz de programación de API gráfica OpenGL ES 2.0 3D, un
 motor de renderizado WebKit, un motor gráfico SGL, SSL y una biblioteca
 estándar de C Bionic.
 El sistema operativo está compuesto por 12 millones de líneas de código,
 incluyendo 3 millones de líneas de XML, 2,8 millones de líneas de lenguaje
 C, 2,1 millones de líneas de Java y 1,75 millones de líneas de C++.
\end_layout

\begin_layout Subsubsection
Dalvik
\end_layout

\begin_layout Standard
Dalvik es la máquina virtual que utiliza la plataforma para dispositivos
 móviles Android.
 Dalvik ha sido diseñada por Dan Bornstein con contribuciones de otros ingeniero
s de Google.
\end_layout

\begin_layout Standard
Dalvik está optimizada para requerir poca memoria y está diseñada para permitir
 ejecutar varias instancias de la máquina virtual simultáneamente, delegando
 en el sistema operativo subyacente el soporte de aislamiento de procesos,
 gestión de memoria e hilos.
\end_layout

\begin_layout Section
Android X86 - Ubuntu Arm
\end_layout

\begin_layout Standard
La plataforma de hardware principal de Android es la arquitectura ARM.
 Hay soporte para x86 en el proyecto Android-x86, 80 y Google TV utiliza
 una versión especial de Android x86.
 
\end_layout

\begin_layout Section
Configuración
\end_layout

\begin_layout Subsection
Personalización
\end_layout

\begin_layout Standard
Una de las claves de Android es su capacidad para personalizar.
\end_layout

\begin_layout Subsubsection
Accesos Directos
\end_layout

\begin_layout Standard
Al arrastrar cualquier aplicación del menú al escritorio.
 Efectivamente se pueden crear tantos accesos directos como se requiera.
 En cada carpeta se puede introducir todos los accesos directos que se quiera
 para mantener organizado tu escritorio.
 También si se abre la carpeta y se presiona en el nombre de la carpeta,
 se puede cambiar su nombre.
 
\end_layout

\begin_layout Subsubsection
Widgets 
\end_layout

\begin_layout Standard
Los widgets son aplicaciones que funcionan permanente en el escritorio.
 Para poner uno de ellos, pulsa la pantalla 2 segundos y selecciona Widgets.
 Encontrarás muchas aplicaciones.
 Además, se pueden descargar muchos mas widgets, se puede buscar en el market.
\end_layout

\begin_layout Subsection
Cuenta Google
\end_layout

\begin_layout Standard
Android es “Google” para teléfonos móviles.
 Nada más al encender el teléfono pedirá acceder a tu cuenta Google.
 Porque Android está permanentemente sincronizado con Google.
 Eso significa Recibir e-mails automáticamente, tener todos los calendarios
 sincronizados, todos los contactos sincronizados, contactos Google Talk,
 mapas de Google Maps.
\end_layout

\begin_layout Standard
De esta manera, cuando se abre cualquier teléfono se tien todo exactamente
 como la última vez.
 Si se añade un contacto en tu correo, automáticamente te aparecerá en tu
 teléfono y viceversa.
 
\end_layout

\begin_layout Subsubsection
Market
\end_layout

\begin_layout Standard
Android tiene en el mercado más de 38000 aplicaciones para todos los gustos.
 Hay aplicaciones gratuitas y aplicaciones de pago.
 Para empezar a instalar cosas, haz click en el icono Android Market.
 
\end_layout

\begin_layout Section
Root
\end_layout

\begin_layout Standard
Root es el proceso para adquirir acceso administrativo al teléfono.
 A pesar de que Android es un sistema operativo de código abierto, las funciones
 de sistema están reservadas – y generalmente restrictas por operadoras
 y fabricantes -, y el acceso root provee acceso a modificar varias funciones
 del sistema no habilitadas para el usuario Android normal, permitiendo
 personalizar el celular Android en todo su potencial.
\end_layout

\begin_layout Subsection
Riesgos del Root
\end_layout

\begin_layout Standard
Rootear el teléfono implica algunos riesgos directos e indirectos.
 Uno de los principales es perder la garantía del fabricante.
 Sin embargo, teniendo acceso root es posible devolver el teléfono a su
 estado original y revertir el proceso de root sin consecuencias.
 Para ello, es recomendable conseguir el stock ROM ( o ROM original ) antes
 de comenzar el proceso.
\end_layout

\begin_layout Standard
Otro de los riesgos es dejar el teléfono inutilizable.
 Aunque poco probable, siempre existe la posibilidad que en el medio del
 proceso ocurra un problema que deje al celular android bricked (derivativo
 de Ladrillo en inglés, y no hace falta explicar mucho más).
 Sin embargo, estos casos son los menos frecuentes.
\end_layout

\begin_layout Subsection
Ventajas del Root
\end_layout

\begin_layout Standard
Una de las principales razones para obtener acceso root en celulares Android
 es tener el contro total del sistema, pudiendo realizar una serie de personaliz
aciones que no serían posibles sin este tipo de acceso.
 Algunas de las cosas que se pueden realizar son:
\end_layout

\begin_layout Itemize
Mejorar la performance: Realizando varios cambios en el sistema Android
 se puede mejorar la velocidad del teléfono, así como también optimizar
 el uso de la memoria.
 Además existen varias aplicaciones en Android Market que permiten controlar
 algunos aspectos, como modificar la velocidad del procesador o acceder
 al sistema de archivos – y requieren acceso root para ello.
\end_layout

\begin_layout Itemize
Alterar archivos de sistema: El acceso root permite alterar archivos de
 sistema, incluyendo agregar temas y wallpapers, modificar o eliminar aplicacion
es de sistema (generalmente aplicaciones que cargan las operadoras) e incluso
 modificar las imágenes de Android.
\end_layout

\begin_layout Itemize
Acceder a funciones bloqueadas: Muchas veces, las operadoras bloquean funciones
 básicas de Android en favor de su propio negocio.
 El acceso root permite acceder nuevamente a estas funciones bloqueadas.
\end_layout

\begin_layout Itemize
Ultimas versiones de Android: El acceso root permite instalar versiones
 más recientes de Android.
 Muchas veces las operadoras tardan en lanzar actualizaciones o los fabricantes
 no actualizan sus celulares Android a la última versión.
 Con acceso root es posible instalar versiones futuras instalando ROMs alternati
vas basadas en las versiones más recientes de Android.
\end_layout

\end_body
\end_document
